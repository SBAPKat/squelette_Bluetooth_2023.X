

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Nov 24 09:19:07 2023

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K20 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _TXREG	set	4013
    59  0000                     _PIE1bits	set	3997
    60  0000                     _SPBRG	set	4015
    61  0000                     _RCSTAbits	set	4011
    62  0000                     _TXSTAbits	set	4012
    63  0000                     _RCREG	set	4014
    64  0000                     _PIR1bits	set	3998
    65  0000                     _TRISBbits	set	3987
    66  0000                     _LATD6	set	31846
    67  0000                     _TRISD6	set	31918
    68  0000                     _TRISA4	set	31892
    69  0000                     _BRG16	set	32195
    70  0000                     _LATA4	set	31820
    71  0000                     _LATB3	set	31827
    72  0000                     _RBPU	set	32655
    73  0000                     _GIE	set	32663
    74  0000                     _PEIE	set	32662
    75  0000                     _RCIE	set	31981
    76  0000                     _RCIP	set	31997
    77  0000                     _RCIF	set	31989
    78                           
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	opt stack 0
    82  000600  00                 	db	0
    83  000601                     STR_1:
    84  000601  61                 	db	97	;'a'
    85  000602  74                 	db	116	;'t'
    86  000603  2B                 	db	43
    87  000604  61                 	db	97	;'a'
    88  000605  64                 	db	100	;'d'
    89  000606  64                 	db	100	;'d'
    90  000607  72                 	db	114	;'r'
    91  000608  3F                 	db	63	;'?'
    92  000609  0D                 	db	13
    93  00060A  00                 	db	0
    94                           
    95                           ; #config settings
    96  00060B  00                 	db	0	; dummy byte at the end
    97  0000                     
    98                           	psect	cinit
    99  00072A                     __pcinit:
   100                           	opt stack 0
   101  00072A                     start_initialization:
   102                           	opt stack 0
   103  00072A                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to BANK0 (60 bytes)
   107  00072A  EE00  F060         	lfsr	0,__pbssBANK0
   108  00072E  0E3C               	movlw	60
   109  000730                     clear_0:
   110  000730  6AEE               	clrf	postinc0,c
   111  000732  06E8               	decf	wreg,f,c
   112  000734  E1FD               	bnz	clear_0
   113                           
   114                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   115  000736  6A30               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   116                           
   117                           ; Clear objects allocated to COMRAM (16 bytes)
   118  000738  EE00  F020         	lfsr	0,__pbssCOMRAM
   119  00073C  0E10               	movlw	16
   120  00073E                     clear_1:
   121  00073E  6AEE               	clrf	postinc0,c
   122  000740  06E8               	decf	wreg,f,c
   123  000742  E1FD               	bnz	clear_1
   124  000744                     end_of_initialization:
   125                           	opt stack 0
   126  000744                     __end_of__initialization:
   127                           	opt stack 0
   128  000744  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129  000746  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130  000748  0E00               	movlw	low (__Lmediumconst shr (0+16))
   131  00074A  6EF8               	movwf	tblptru,c
   132  00074C  0100               	movlb	0
   133  00074E  EF06  F003         	goto	_main	;jump to C main() function
   134                           tblptru	equ	0xFF8
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           
   138                           	psect	bitbssCOMRAM
   139  000180                     __pbitbssCOMRAM:
   140                           	opt stack 0
   141  000180                     _flag_OK:
   142                           	opt stack 0
   143  000180                     	ds	1
   144  000181                     _flag_CONNECT:
   145                           	opt stack 0
   146  000181                     	ds	1
   147                           tblptru	equ	0xFF8
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bssCOMRAM
   152  000020                     __pbssCOMRAM:
   153                           	opt stack 0
   154  000020                     _TrameERROROK:
   155                           	opt stack 0
   156  000020                     	ds	2
   157  000022                     _TrameFin:
   158                           	opt stack 0
   159  000022                     	ds	2
   160  000024                     _TrameStart:
   161                           	opt stack 0
   162  000024                     	ds	2
   163  000026                     _NbrInt:
   164                           	opt stack 0
   165  000026                     	ds	2
   166  000028                     _rw_ptr:
   167                           	opt stack 0
   168  000028                     	ds	2
   169  00002A                     _Start2:
   170                           	opt stack 0
   171  00002A                     	ds	1
   172  00002B                     _Start1:
   173                           	opt stack 0
   174  00002B                     	ds	1
   175  00002C                     _Start:
   176                           	opt stack 0
   177  00002C                     	ds	1
   178  00002D                     _Data_2:
   179                           	opt stack 0
   180  00002D                     	ds	1
   181  00002E                     _Data_1:
   182                           	opt stack 0
   183  00002E                     	ds	1
   184  00002F                     _Data:
   185                           	opt stack 0
   186  00002F                     	ds	1
   187                           tblptru	equ	0xFF8
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           
   191                           	psect	bssBANK0
   192  000060                     __pbssBANK0:
   193                           	opt stack 0
   194  000060                     _buffin:
   195                           	opt stack 0
   196  000060                     	ds	60
   197                           tblptru	equ	0xFF8
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	cstackCOMRAM
   202  000001                     __pcstackCOMRAM:
   203                           	opt stack 0
   204  000001                     ??_isr:
   205  000001                     
   206                           ; 1 bytes @ 0x0
   207  000001                     	ds	20
   208  000015                     isr@i:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x14
   212  000015                     	ds	2
   213  000017                     ??_Delay200_ms:
   214  000017                     ??_Delay1Second:
   215  000017                     putch@c:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x16
   219  000017                     	ds	1
   220  000018                     ?_printf:
   221                           	opt stack 0
   222  000018                     Delay1Second@i:
   223                           	opt stack 0
   224  000018                     Delay200_ms@i:
   225                           	opt stack 0
   226  000018                     printf@f:
   227                           	opt stack 0
   228                           
   229                           ; 2 bytes @ 0x17
   230  000018                     	ds	2
   231  00001A                     printf@ap:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x19
   235  00001A                     	ds	2
   236  00001C                     printf@c:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x1B
   240  00001C                     	ds	1
   241  00001D                     ??_main:
   242                           
   243                           ; 1 bytes @ 0x1C
   244  00001D                     	ds	1
   245  00001E                     main@i:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x1D
   249  00001E                     	ds	2
   250                           tblptru	equ	0xFF8
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 51 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  i               2   29[COMRAM] int 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   273 ;;      Params:         0       0       0       0       0       0       0
   274 ;;      Locals:         2       0       0       0       0       0       0
   275 ;;      Temps:          1       0       0       0       0       0       0
   276 ;;      Totals:         3       0       0       0       0       0       0
   277 ;;Total ram usage:        3 bytes
   278 ;; Hardware stack levels required when called:    3
   279 ;; This function calls:
   280 ;;		_Delay1Second
   281 ;;		_Delay200_ms
   282 ;;		_InitUSART_19200
   283 ;;		_iniPorts
   284 ;;		_printf
   285 ;;		_wait_OK
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text0
   292  00060C                     __ptext0:
   293                           	opt stack 0
   294  00060C                     _main:
   295                           	opt stack 28
   296                           
   297                           ;main.c: 54: int i=0;
   298                           
   299                           ;incstack = 0
   300  00060C  0E00               	movlw	0
   301  00060E  6E1F               	movwf	main@i+1,c
   302  000610  0E00               	movlw	0
   303  000612  6E1E               	movwf	main@i,c
   304                           
   305                           ;main.c: 56: iniPorts();
   306  000614  ECC6  F003         	call	_iniPorts	;wreg free
   307                           
   308                           ;main.c: 57: InitUSART_19200();
   309  000618  ECB6  F003         	call	_InitUSART_19200	;wreg free
   310                           
   311                           ;main.c: 60: RCIF = 0;
   312  00061C  9A9E               	bcf	3998,5,c	;volatile
   313                           
   314                           ;main.c: 61: RCIP = 0;
   315  00061E  9A9F               	bcf	3999,5,c	;volatile
   316                           
   317                           ;main.c: 62: RCIE = 1;
   318  000620  8A9D               	bsf	3997,5,c	;volatile
   319                           
   320                           ;main.c: 63: PEIE = 1;
   321  000622  8CF2               	bsf	intcon,6,c	;volatile
   322                           
   323                           ;main.c: 64: GIE = 1;
   324  000624  8EF2               	bsf	intcon,7,c	;volatile
   325                           
   326                           ;main.c: 68: RBPU=0;
   327  000626  9EF1               	bcf	intcon2,7,c	;volatile
   328                           
   329                           ;main.c: 69: TRISBbits.RB3 = 0;
   330  000628  9693               	bcf	3987,3,c	;volatile
   331                           
   332                           ;main.c: 71: LATB3 = 0;
   333  00062A  968A               	bcf	3978,3,c	;volatile
   334                           
   335                           ;main.c: 72: Delay200_ms();
   336  00062C  EC46  F003         	call	_Delay200_ms	;wreg free
   337                           
   338                           ;main.c: 73: LATB3 = 1;
   339  000630  868A               	bsf	3978,3,c	;volatile
   340                           
   341                           ;main.c: 74: LATA4 = 0;
   342  000632  9889               	bcf	3977,4,c	;volatile
   343                           
   344                           ;main.c: 75: for(i=0;i<3;i++)
   345  000634  0E00               	movlw	0
   346  000636  6E1F               	movwf	main@i+1,c
   347  000638  0E00               	movlw	0
   348  00063A  6E1E               	movwf	main@i,c
   349  00063C  BE1F               	btfsc	main@i+1,7,c
   350  00063E  D003               	goto	l69
   351  000640  501F               	movf	main@i+1,w,c
   352  000642  E10D               	bnz	l70
   353  000644  D008               	goto	L1
   354  000646                     l69:
   355                           
   356                           ;main.c: 76: {
   357                           ;main.c: 77: Delay1Second();
   358  000646  EC63  F003         	call	_Delay1Second	;wreg free
   359  00064A  4A1E               	infsnz	main@i,f,c
   360  00064C  2A1F               	incf	main@i+1,f,c
   361  00064E  BE1F               	btfsc	main@i+1,7,c
   362  000650  D7FA               	goto	l69
   363  000652  501F               	movf	main@i+1,w,c
   364  000654  E104               	bnz	u250
   365  000656                     L1:
   366  000656  0E03               	movlw	3
   367  000658  5C1E               	subwf	main@i,w,c
   368  00065A  A0D8               	btfss	status,0,c
   369  00065C  D7F4               	goto	l69
   370  00065E                     u250:
   371  00065E                     l70:
   372                           
   373                           ;main.c: 78: }
   374                           ;main.c: 79: LATA4 = 1;
   375  00065E  8889               	bsf	3977,4,c	;volatile
   376                           
   377                           ;main.c: 83: printf("at+addr?\r");
   378  000660  0E01               	movlw	low STR_1
   379  000662  6E18               	movwf	printf@f,c
   380  000664  0E06               	movlw	high STR_1
   381  000666  6E19               	movwf	printf@f+1,c
   382  000668  EC80  F003         	call	_printf	;wreg free
   383                           
   384                           ;main.c: 85: wait_OK();
   385  00066C  ECA9  F003         	call	_wait_OK	;wreg free
   386  000670                     
   387                           ;main.c: 95: LATA4 = 0;
   388  000670  9889               	bcf	3977,4,c	;volatile
   389                           
   390                           ;main.c: 96: _delay((unsigned long)((20)*(10000000/4000.0)));
   391  000672  0E41               	movlw	65
   392  000674  6E1D               	movwf	??_main& (0+255),c
   393  000676  0EEE               	movlw	238
   394  000678                     u367:
   395  000678  2EE8               	decfsz	wreg,f,c
   396  00067A  D7FE               	bra	u367
   397  00067C  2E1D               	decfsz	??_main& (0+255),f,c
   398  00067E  D7FC               	bra	u367
   399  000680  F000 F000          	nop2	
   400                           
   401                           ;main.c: 97: LATA4 = 1;
   402  000684  8889               	bsf	3977,4,c	;volatile
   403                           
   404                           ;main.c: 98: Delay1Second();
   405  000686  EC63  F003         	call	_Delay1Second	;wreg free
   406  00068A  D7F2               	goto	l71
   407  00068C                     __end_of_main:
   408                           	opt stack 0
   409                           tblptru	equ	0xFF8
   410                           intcon	equ	0xFF2
   411                           intcon2	equ	0xFF1
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           status	equ	0xFD8
   415                           
   416 ;; *************** function _wait_OK *****************
   417 ;; Defined at:
   418 ;;		line 189 in file "main.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         0       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0
   435 ;;      Totals:         0       0       0       0       0       0       0
   436 ;;Total ram usage:        0 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; Hardware stack levels required when called:    1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text1
   447  000752                     __ptext1:
   448                           	opt stack 0
   449  000752                     _wait_OK:
   450                           	opt stack 29
   451                           
   452                           ;main.c: 192: Start='\n';
   453                           
   454                           ;incstack = 0
   455  000752  0E0A               	movlw	10
   456  000754  6E2C               	movwf	_Start,c
   457                           
   458                           ;main.c: 193: Start1='O';
   459  000756  0E4F               	movlw	79
   460  000758  6E2B               	movwf	_Start1,c
   461                           
   462                           ;main.c: 194: Start2='K';
   463  00075A  0E4B               	movlw	75
   464  00075C  6E2A               	movwf	_Start2,c
   465                           
   466                           ;main.c: 195: flag_OK=0;
   467  00075E  9030               	bcf	_flag_OK/(0+8),_flag_OK& (0+7),c
   468                           
   469                           ;main.c: 196: LATA4 = 0;
   470  000760  9889               	bcf	3977,4,c	;volatile
   471  000762  A030               	btfss	_flag_OK/(0+8),_flag_OK& (0+7),c
   472  000764  D7FE               	goto	l109
   473                           
   474                           ;main.c: 198: }
   475                           ;main.c: 199: flag_OK=0;
   476  000766  9030               	bcf	_flag_OK/(0+8),_flag_OK& (0+7),c
   477                           
   478                           ;main.c: 200: LATA4 = 1;
   479  000768  8889               	bsf	3977,4,c	;volatile
   480  00076A  0012               	return		;funcret
   481  00076C                     __end_of_wait_OK:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           intcon	equ	0xFF2
   485                           intcon2	equ	0xFF1
   486                           postinc0	equ	0xFEE
   487                           wreg	equ	0xFE8
   488                           status	equ	0xFD8
   489                           
   490 ;; *************** function _printf *****************
   491 ;; Defined at:
   492 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;  f               2   23[COMRAM] PTR const unsigned char 
   495 ;;		 -> STR_1(10), 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  tmpval          4    0        struct .
   498 ;;  cp              3    0        PTR const unsigned char 
   499 ;;  ap              2   25[COMRAM] PTR void [1]
   500 ;;		 -> ?_printf(2), 
   501 ;;  len             2    0        unsigned int 
   502 ;;  val             2    0        unsigned int 
   503 ;;  c               1   27[COMRAM] char 
   504 ;;  flag            1    0        unsigned char 
   505 ;;  prec            1    0        char 
   506 ;; Return value:  Size  Location     Type
   507 ;;                  2   23[COMRAM] int 
   508 ;; Registers used:
   509 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   515 ;;      Params:         2       0       0       0       0       0       0
   516 ;;      Locals:         3       0       0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0
   518 ;;      Totals:         5       0       0       0       0       0       0
   519 ;;Total ram usage:        5 bytes
   520 ;; Hardware stack levels used:    1
   521 ;; Hardware stack levels required when called:    2
   522 ;; This function calls:
   523 ;;		_putch
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text2
   530  000700                     __ptext2:
   531                           	opt stack 0
   532  000700                     _printf:
   533                           	opt stack 28
   534                           
   535                           ;doprnt.c: 466: va_list ap;
   536                           ;doprnt.c: 499: signed char c;
   537                           ;doprnt.c: 506: signed char prec;
   538                           ;doprnt.c: 508: unsigned char flag;
   539                           ;doprnt.c: 523: union {
   540                           ;doprnt.c: 524: unsigned long vd;
   541                           ;doprnt.c: 525: double integ;
   542                           ;doprnt.c: 526: } tmpval;
   543                           ;doprnt.c: 528: unsigned int val;
   544                           ;doprnt.c: 529: unsigned len;
   545                           ;doprnt.c: 530: const char * cp;
   546                           ;doprnt.c: 533: *ap = __va_start();
   547                           
   548                           ;incstack = 0
   549  000700  0E1A               	movlw	low (?_printf+2)
   550  000702  6E1A               	movwf	printf@ap,c
   551  000704  0E00               	movlw	high (?_printf+2)
   552  000706  6E1B               	movwf	printf@ap+1,c
   553                           
   554                           ;doprnt.c: 536: while(c = *f++) {
   555  000708  D003               	goto	l170
   556  00070A                     
   557                           ;doprnt.c: 540: {
   558                           ;doprnt.c: 541: (putch(c) );
   559  00070A  501C               	movf	printf@c,w,c
   560  00070C  ECC0  F003         	call	_putch
   561  000710                     l170:
   562  000710  C018  FFF6         	movff	printf@f,tblptrl
   563  000714  C019  FFF7         	movff	printf@f+1,tblptrh
   564  000718  4A18               	infsnz	printf@f,f,c
   565  00071A  2A19               	incf	printf@f+1,f,c
   566  00071C                     	if	0	;tblptru may be non-zero
   567  00071C                     	endif
   568  00071C                     	if	0	;tblptru may be non-zero
   569  00071C                     	endif
   570  00071C  0008               	tblrd		*
   571  00071E  CFF5 F01C          	movff	tablat,printf@c
   572  000722  501C               	movf	printf@c,w,c
   573  000724  B4D8               	btfsc	status,2,c
   574  000726  0012               	return	
   575  000728  D7F0               	goto	l171
   576  00072A                     __end_of_printf:
   577                           	opt stack 0
   578                           tblptru	equ	0xFF8
   579                           tblptrh	equ	0xFF7
   580                           tblptrl	equ	0xFF6
   581                           tablat	equ	0xFF5
   582                           intcon	equ	0xFF2
   583                           intcon2	equ	0xFF1
   584                           postinc0	equ	0xFEE
   585                           wreg	equ	0xFE8
   586                           status	equ	0xFD8
   587                           
   588 ;; *************** function _putch *****************
   589 ;; Defined at:
   590 ;;		line 33 in file "tmd_lib_v0.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  c               1    wreg     unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  c               1   22[COMRAM] unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   604 ;;      Params:         0       0       0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    1
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_printf
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text3
   619  000780                     __ptext3:
   620                           	opt stack 0
   621  000780                     _putch:
   622                           	opt stack 28
   623                           
   624                           ;incstack = 0
   625                           ;putch@c stored from wreg
   626  000780  6E17               	movwf	putch@c,c
   627  000782                     
   628                           ;tmd_lib_v0.c: 35: while (PIR1bits.TXIF!=1);
   629  000782  A89E               	btfss	3998,4,c	;volatile
   630  000784  D7FE               	goto	l795
   631                           
   632                           ;tmd_lib_v0.c: 36: TXREG=c;
   633  000786  C017  FFAD         	movff	putch@c,4013	;volatile
   634  00078A  0012               	return		;funcret
   635  00078C                     __end_of_putch:
   636                           	opt stack 0
   637                           tblptru	equ	0xFF8
   638                           tblptrh	equ	0xFF7
   639                           tblptrl	equ	0xFF6
   640                           tablat	equ	0xFF5
   641                           intcon	equ	0xFF2
   642                           intcon2	equ	0xFF1
   643                           postinc0	equ	0xFEE
   644                           wreg	equ	0xFE8
   645                           status	equ	0xFD8
   646                           
   647 ;; *************** function _iniPorts *****************
   648 ;; Defined at:
   649 ;;		line 25 in file "tmd_lib_v0.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		None
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   663 ;;      Params:         0       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text4
   678  00078C                     __ptext4:
   679                           	opt stack 0
   680  00078C                     _iniPorts:
   681                           	opt stack 29
   682                           
   683                           ;tmd_lib_v0.c: 27: TRISA4 = 0;
   684                           
   685                           ;incstack = 0
   686  00078C  9892               	bcf	3986,4,c	;volatile
   687                           
   688                           ;tmd_lib_v0.c: 28: TRISD6 = 0;
   689  00078E  9C95               	bcf	3989,6,c	;volatile
   690                           
   691                           ;tmd_lib_v0.c: 29: LATA4 = 0;
   692  000790  9889               	bcf	3977,4,c	;volatile
   693                           
   694                           ;tmd_lib_v0.c: 30: LATD6 = 1;
   695  000792  8C8C               	bsf	3980,6,c	;volatile
   696  000794  0012               	return		;funcret
   697  000796                     __end_of_iniPorts:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           tblptrl	equ	0xFF6
   702                           tablat	equ	0xFF5
   703                           intcon	equ	0xFF2
   704                           intcon2	equ	0xFF1
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _InitUSART_19200 *****************
   710 ;; Defined at:
   711 ;;		line 13 in file "tmd_lib_v0.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   725 ;;      Params:         0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text5
   740  00076C                     __ptext5:
   741                           	opt stack 0
   742  00076C                     _InitUSART_19200:
   743                           	opt stack 29
   744                           
   745                           ;tmd_lib_v0.c: 15: TXSTAbits.SYNC = 0;
   746                           
   747                           ;incstack = 0
   748  00076C  98AC               	bcf	4012,4,c	;volatile
   749                           
   750                           ;tmd_lib_v0.c: 16: TXSTAbits.TXEN = 1;
   751  00076E  8AAC               	bsf	4012,5,c	;volatile
   752                           
   753                           ;tmd_lib_v0.c: 17: TXSTAbits.BRGH = 1;
   754  000770  84AC               	bsf	4012,2,c	;volatile
   755                           
   756                           ;tmd_lib_v0.c: 18: RCSTAbits.CREN = 1;
   757  000772  88AB               	bsf	4011,4,c	;volatile
   758                           
   759                           ;tmd_lib_v0.c: 19: BRG16 = 0;
   760  000774  96B8               	bcf	4024,3,c	;volatile
   761                           
   762                           ;tmd_lib_v0.c: 20: SPBRG = 32;
   763  000776  0E20               	movlw	32
   764  000778  6EAF               	movwf	4015,c	;volatile
   765                           
   766                           ;tmd_lib_v0.c: 21: PIE1bits.RCIE = 1;
   767  00077A  8A9D               	bsf	3997,5,c	;volatile
   768                           
   769                           ;tmd_lib_v0.c: 22: RCSTAbits.SPEN = 1;
   770  00077C  8EAB               	bsf	4011,7,c	;volatile
   771  00077E  0012               	return		;funcret
   772  000780                     __end_of_InitUSART_19200:
   773                           	opt stack 0
   774                           tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           intcon	equ	0xFF2
   779                           intcon2	equ	0xFF1
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           status	equ	0xFD8
   783                           
   784 ;; *************** function _Delay200_ms *****************
   785 ;; Defined at:
   786 ;;		line 171 in file "main.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  i               2   23[COMRAM] int 
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         0       0       0       0       0       0       0
   801 ;;      Locals:         2       0       0       0       0       0       0
   802 ;;      Temps:          1       0       0       0       0       0       0
   803 ;;      Totals:         3       0       0       0       0       0       0
   804 ;;Total ram usage:        3 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    1
   807 ;; This function calls:
   808 ;;		Nothing
   809 ;; This function is called by:
   810 ;;		_main
   811 ;;		_wait_CONNECT
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text6
   816  00068C                     __ptext6:
   817                           	opt stack 0
   818  00068C                     _Delay200_ms:
   819                           	opt stack 29
   820                           
   821                           ;main.c: 173: int i = 0;
   822                           
   823                           ;incstack = 0
   824  00068C  0E00               	movlw	0
   825  00068E  6E19               	movwf	Delay200_ms@i+1,c
   826  000690  0E00               	movlw	0
   827  000692  6E18               	movwf	Delay200_ms@i,c
   828                           
   829                           ;main.c: 174: for(i=0;i<20;i++)
   830  000694  0E00               	movlw	0
   831  000696  6E19               	movwf	Delay200_ms@i+1,c
   832  000698  0E00               	movlw	0
   833  00069A  6E18               	movwf	Delay200_ms@i,c
   834  00069C                     l811:
   835  00069C  BE19               	btfsc	Delay200_ms@i+1,7,c
   836  00069E  D006               	goto	l98
   837  0006A0  5019               	movf	Delay200_ms@i+1,w,c
   838  0006A2  E110               	bnz	l100
   839  0006A4  0E14               	movlw	20
   840  0006A6  5C18               	subwf	Delay200_ms@i,w,c
   841  0006A8  B0D8               	btfsc	status,0,c
   842  0006AA  0012               	return	
   843  0006AC                     l98:
   844                           
   845                           ;main.c: 175: {
   846                           ;main.c: 176: _delay((unsigned long)((10)*(10000000/4000.0)));
   847  0006AC  0E21               	movlw	33
   848  0006AE  6E17               	movwf	??_Delay200_ms& (0+255),c
   849  0006B0  0E76               	movlw	118
   850  0006B2                     u377:
   851  0006B2  2EE8               	decfsz	wreg,f,c
   852  0006B4  D7FE               	bra	u377
   853  0006B6  2E17               	decfsz	??_Delay200_ms& (0+255),f,c
   854  0006B8  D7FC               	bra	u377
   855  0006BA  F000 F000          	nop2	
   856  0006BE  4A18               	infsnz	Delay200_ms@i,f,c
   857  0006C0  2A19               	incf	Delay200_ms@i+1,f,c
   858  0006C2  D7EC               	goto	l811
   859  0006C4                     l100:
   860  0006C4  0012               	return		;funcret
   861  0006C6                     __end_of_Delay200_ms:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           intcon	equ	0xFF2
   868                           intcon2	equ	0xFF1
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           status	equ	0xFD8
   872                           
   873 ;; *************** function _Delay1Second *****************
   874 ;; Defined at:
   875 ;;		line 162 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  i               2   23[COMRAM] int 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   889 ;;      Params:         0       0       0       0       0       0       0
   890 ;;      Locals:         2       0       0       0       0       0       0
   891 ;;      Temps:          1       0       0       0       0       0       0
   892 ;;      Totals:         3       0       0       0       0       0       0
   893 ;;Total ram usage:        3 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text7
   904  0006C6                     __ptext7:
   905                           	opt stack 0
   906  0006C6                     _Delay1Second:
   907                           	opt stack 29
   908                           
   909                           ;main.c: 164: int i = 0;
   910                           
   911                           ;incstack = 0
   912  0006C6  0E00               	movlw	0
   913  0006C8  6E19               	movwf	Delay1Second@i+1,c
   914  0006CA  0E00               	movlw	0
   915  0006CC  6E18               	movwf	Delay1Second@i,c
   916                           
   917                           ;main.c: 165: for(i=0;i<100;i++)
   918  0006CE  0E00               	movlw	0
   919  0006D0  6E19               	movwf	Delay1Second@i+1,c
   920  0006D2  0E00               	movlw	0
   921  0006D4  6E18               	movwf	Delay1Second@i,c
   922  0006D6                     l821:
   923  0006D6  BE19               	btfsc	Delay1Second@i+1,7,c
   924  0006D8  D006               	goto	l93
   925  0006DA  5019               	movf	Delay1Second@i+1,w,c
   926  0006DC  E110               	bnz	l95
   927  0006DE  0E64               	movlw	100
   928  0006E0  5C18               	subwf	Delay1Second@i,w,c
   929  0006E2  B0D8               	btfsc	status,0,c
   930  0006E4  0012               	return	
   931  0006E6                     l93:
   932                           
   933                           ;main.c: 166: {
   934                           ;main.c: 167: _delay((unsigned long)((10)*(10000000/4000.0)));
   935  0006E6  0E21               	movlw	33
   936  0006E8  6E17               	movwf	??_Delay1Second& (0+255),c
   937  0006EA  0E76               	movlw	118
   938  0006EC                     u387:
   939  0006EC  2EE8               	decfsz	wreg,f,c
   940  0006EE  D7FE               	bra	u387
   941  0006F0  2E17               	decfsz	??_Delay1Second& (0+255),f,c
   942  0006F2  D7FC               	bra	u387
   943  0006F4  F000 F000          	nop2	
   944  0006F8  4A18               	infsnz	Delay1Second@i,f,c
   945  0006FA  2A19               	incf	Delay1Second@i+1,f,c
   946  0006FC  D7EC               	goto	l821
   947  0006FE                     l95:
   948  0006FE  0012               	return		;funcret
   949  000700                     __end_of_Delay1Second:
   950                           	opt stack 0
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           intcon	equ	0xFF2
   956                           intcon2	equ	0xFF1
   957                           postinc0	equ	0xFEE
   958                           wreg	equ	0xFE8
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _isr *****************
   962 ;; Defined at:
   963 ;;		line 104 in file "main.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  i               2   20[COMRAM] int 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   977 ;;      Params:         0       0       0       0       0       0       0
   978 ;;      Locals:         2       0       0       0       0       0       0
   979 ;;      Temps:         20       0       0       0       0       0       0
   980 ;;      Totals:        22       0       0       0       0       0       0
   981 ;;Total ram usage:       22 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		Interrupt level 2
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	intcode
   991  000008                     __pintcode:
   992                           	opt stack 0
   993  000008                     _isr:
   994                           	opt stack 28
   995                           
   996                           ;incstack = 0
   997  000008  8231               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   998  00000A  CFFA F003          	movff	pclath,??_isr+2
   999  00000E  CFFB F004          	movff	pclatu,??_isr+3
  1000  000012  CFE9 F005          	movff	fsr0l,??_isr+4
  1001  000016  CFEA F006          	movff	fsr0h,??_isr+5
  1002  00001A  CFE1 F007          	movff	fsr1l,??_isr+6
  1003  00001E  CFE2 F008          	movff	fsr1h,??_isr+7
  1004  000022  CFD9 F009          	movff	fsr2l,??_isr+8
  1005  000026  CFDA F00A          	movff	fsr2h,??_isr+9
  1006  00002A  CFF3 F00B          	movff	prodl,??_isr+10
  1007  00002E  CFF4 F00C          	movff	prodh,??_isr+11
  1008  000032  CFF6 F00D          	movff	tblptrl,??_isr+12
  1009  000036  CFF7 F00E          	movff	tblptrh,??_isr+13
  1010  00003A  CFF8 F00F          	movff	tblptru,??_isr+14
  1011  00003E  CFF5 F010          	movff	tablat,??_isr+15
  1012  000042  C031  F011         	movff	btemp,??_isr+16
  1013  000046  C032  F012         	movff	btemp+1,??_isr+17
  1014  00004A  C033  F013         	movff	btemp+2,??_isr+18
  1015  00004E  C034  F014         	movff	btemp+3,??_isr+19
  1016                           
  1017                           ;main.c: 106: int i=0;
  1018  000052  0E00               	movlw	0
  1019  000054  6E16               	movwf	isr@i+1,c
  1020  000056  0E00               	movlw	0
  1021  000058  6E15               	movwf	isr@i,c
  1022                           
  1023                           ;main.c: 107: if(PIR1bits.RCIF == 1) {
  1024  00005A  AA9E               	btfss	3998,5,c	;volatile
  1025  00005C  D075               	goto	i2l79
  1026                           
  1027                           ;main.c: 108: PIR1bits.RCIF = 0;
  1028  00005E  9A9E               	bcf	3998,5,c	;volatile
  1029                           
  1030                           ;main.c: 109: LATA4=~LATA4;
  1031  000060  B889               	btfsc	3977,4,c	;volatile
  1032  000062  D002               	goto	i2u27_40
  1033  000064  8889               	bsf	3977,4,c	;volatile
  1034  000066  D001               	goto	i2u28_45
  1035  000068                     i2u27_40:
  1036  000068  9889               	bcf	3977,4,c	;volatile
  1037  00006A                     i2u28_45:
  1038                           
  1039                           ;main.c: 110: Data= RCREG;
  1040  00006A  CFAE F02F          	movff	4014,_Data	;volatile
  1041                           
  1042                           ;main.c: 111: NbrInt++;
  1043  00006E  4A26               	infsnz	_NbrInt,f,c
  1044  000070  2A27               	incf	_NbrInt+1,f,c
  1045                           
  1046                           ;main.c: 115: if( Data==Start2 && Data_1==Start1 && Data_2==Start) {
  1047  000072  502A               	movf	_Start2,w,c
  1048  000074  182F               	xorwf	_Data,w,c
  1049  000076  A4D8               	btfss	status,2,c
  1050  000078  D014               	goto	i2l80
  1051  00007A  502B               	movf	_Start1,w,c
  1052  00007C  182E               	xorwf	_Data_1,w,c
  1053  00007E  A4D8               	btfss	status,2,c
  1054  000080  D010               	goto	i2l80
  1055  000082  502C               	movf	_Start,w,c
  1056  000084  182D               	xorwf	_Data_2,w,c
  1057  000086  A4D8               	btfss	status,2,c
  1058  000088  D00C               	goto	i2l80
  1059                           
  1060                           ;main.c: 116: TrameStart=1;
  1061  00008A  0E00               	movlw	0
  1062  00008C  6E25               	movwf	_TrameStart+1,c
  1063  00008E  0E01               	movlw	1
  1064  000090  6E24               	movwf	_TrameStart,c
  1065                           
  1066                           ;main.c: 117: buffin[1]=Data_2;
  1067  000092  C02D  F061         	movff	_Data_2,_buffin+1
  1068                           
  1069                           ;main.c: 118: buffin[2]=Data_1;
  1070  000096  C02E  F062         	movff	_Data_1,_buffin+2
  1071                           
  1072                           ;main.c: 119: rw_ptr=2;
  1073  00009A  0E00               	movlw	0
  1074  00009C  6E29               	movwf	_rw_ptr+1,c
  1075  00009E  0E02               	movlw	2
  1076  0000A0  6E28               	movwf	_rw_ptr,c
  1077  0000A2                     i2l80:
  1078                           
  1079                           ;main.c: 121: }
  1080                           ;main.c: 123: if (TrameStart) {
  1081  0000A2  5024               	movf	_TrameStart,w,c
  1082  0000A4  1025               	iorwf	_TrameStart+1,w,c
  1083  0000A6  B4D8               	btfsc	status,2,c
  1084  0000A8  D04B               	goto	i2l82
  1085                           
  1086                           ;main.c: 124: rw_ptr++;
  1087  0000AA  4A28               	infsnz	_rw_ptr,f,c
  1088  0000AC  2A29               	incf	_rw_ptr+1,f,c
  1089                           
  1090                           ;main.c: 125: buffin[rw_ptr]=Data;
  1091  0000AE  0E60               	movlw	low _buffin
  1092  0000B0  2428               	addwf	_rw_ptr,w,c
  1093  0000B2  6ED9               	movwf	fsr2l,c
  1094  0000B4  0E00               	movlw	high _buffin
  1095  0000B6  2029               	addwfc	_rw_ptr+1,w,c
  1096  0000B8  6EDA               	movwf	fsr2h,c
  1097  0000BA  C02F  FFDF         	movff	_Data,indf2
  1098                           
  1099                           ;main.c: 127: if( Data == '\r') {
  1100  0000BE  0E0D               	movlw	13
  1101  0000C0  182F               	xorwf	_Data,w,c
  1102  0000C2  A4D8               	btfss	status,2,c
  1103  0000C4  D03D               	goto	i2l82
  1104                           
  1105                           ;main.c: 128: TrameStart=0;
  1106  0000C6  0E00               	movlw	0
  1107  0000C8  6E25               	movwf	_TrameStart+1,c
  1108  0000CA  0E00               	movlw	0
  1109  0000CC  6E24               	movwf	_TrameStart,c
  1110                           
  1111                           ;main.c: 129: TrameFin=1;
  1112  0000CE  0E00               	movlw	0
  1113  0000D0  6E23               	movwf	_TrameFin+1,c
  1114  0000D2  0E01               	movlw	1
  1115  0000D4  6E22               	movwf	_TrameFin,c
  1116                           
  1117                           ;main.c: 130: switch (rw_ptr) {
  1118  0000D6  D009               	goto	i2l83
  1119  0000D8                     i2l84:
  1120                           
  1121                           ;main.c: 133: flag_OK=1;
  1122  0000D8  8030               	bsf	_flag_OK/(0+8),_flag_OK& (0+7),c
  1123                           
  1124                           ;main.c: 134: break;
  1125  0000DA  D017               	goto	i2l85
  1126  0000DC                     i2l86:
  1127                           
  1128                           ;main.c: 137: flag_CONNECT=1;
  1129  0000DC  8230               	bsf	_flag_CONNECT/(0+8),_flag_CONNECT& (0+7),c
  1130                           
  1131                           ;main.c: 138: break;
  1132  0000DE  D015               	goto	i2l85
  1133  0000E0                     
  1134                           ;main.c: 142: TrameERROROK=1;
  1135  0000E0  0E00               	movlw	0
  1136  0000E2  6E21               	movwf	_TrameERROROK+1,c
  1137  0000E4  0E01               	movlw	1
  1138  0000E6  6E20               	movwf	_TrameERROROK,c
  1139                           
  1140                           ;main.c: 143: break;
  1141  0000E8  D010               	goto	i2l85
  1142  0000EA                     i2l83:
  1143  0000EA  C028  F001         	movff	_rw_ptr,??_isr
  1144  0000EE  C029  F002         	movff	_rw_ptr+1,??_isr+1
  1145                           
  1146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1147                           ; Switch size 1, requested type "space"
  1148                           ; Number of cases is 1, Range of values is 0 to 0
  1149                           ; switch strategies available:
  1150                           ; Name         Instructions Cycles
  1151                           ; simple_byte            4     3 (average)
  1152                           ;	Chosen strategy is simple_byte
  1153  0000F2  5002               	movf	??_isr+1,w,c
  1154  0000F4  0A00               	xorlw	0	; case 0
  1155  0000F6  A4D8               	btfss	status,2,c
  1156  0000F8  D7F3               	goto	i2l87
  1157                           
  1158                           ; Switch size 1, requested type "space"
  1159                           ; Number of cases is 2, Range of values is 4 to 26
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            7     4 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164  0000FA  5001               	movf	??_isr,w,c
  1165  0000FC  0A04               	xorlw	4	; case 4
  1166  0000FE  B4D8               	btfsc	status,2,c
  1167  000100  D7EB               	goto	i2l84
  1168  000102  0A1E               	xorlw	30	; case 26
  1169  000104  B4D8               	btfsc	status,2,c
  1170  000106  D7EA               	goto	i2l86
  1171  000108  D7EB               	goto	i2l87
  1172  00010A                     i2l85:
  1173                           
  1174                           ;main.c: 150: for(i=0; i<=60 ;i++){
  1175  00010A  0E00               	movlw	0
  1176  00010C  6E16               	movwf	isr@i+1,c
  1177  00010E  0E00               	movlw	0
  1178  000110  6E15               	movwf	isr@i,c
  1179  000112                     i2l1063:
  1180  000112  BE16               	btfsc	isr@i+1,7,c
  1181  000114  D006               	goto	i2l88
  1182  000116  5016               	movf	isr@i+1,w,c
  1183  000118  E10F               	bnz	i2l1073
  1184  00011A  0E3D               	movlw	61
  1185  00011C  5C15               	subwf	isr@i,w,c
  1186  00011E  B0D8               	btfsc	status,0,c
  1187  000120  D00B               	goto	i2u35_40
  1188  000122                     i2l88:
  1189                           
  1190                           ;main.c: 151: buffin[i]=0;
  1191  000122  0E60               	movlw	low _buffin
  1192  000124  2415               	addwf	isr@i,w,c
  1193  000126  6ED9               	movwf	fsr2l,c
  1194  000128  0E00               	movlw	high _buffin
  1195  00012A  2016               	addwfc	isr@i+1,w,c
  1196  00012C  6EDA               	movwf	fsr2h,c
  1197  00012E  0E00               	movlw	0
  1198  000130  6EDF               	movwf	indf2,c
  1199  000132  4A15               	infsnz	isr@i,f,c
  1200  000134  2A16               	incf	isr@i+1,f,c
  1201  000136  D7ED               	goto	i2l1063
  1202  000138                     i2u35_40:
  1203  000138                     i2l1073:
  1204                           
  1205                           ;main.c: 152: }
  1206                           ;main.c: 153: rw_ptr=0;
  1207  000138  0E00               	movlw	0
  1208  00013A  6E29               	movwf	_rw_ptr+1,c
  1209  00013C  0E00               	movlw	0
  1210  00013E  6E28               	movwf	_rw_ptr,c
  1211  000140                     i2l82:
  1212                           
  1213                           ;main.c: 154: }
  1214                           ;main.c: 155: }
  1215                           ;main.c: 156: Data_2=Data_1;
  1216  000140  C02E  F02D         	movff	_Data_1,_Data_2
  1217                           
  1218                           ;main.c: 157: Data_1=Data;
  1219  000144  C02F  F02E         	movff	_Data,_Data_1
  1220  000148                     i2l79:
  1221  000148  C014  F034         	movff	??_isr+19,btemp+3
  1222  00014C  C013  F033         	movff	??_isr+18,btemp+2
  1223  000150  C012  F032         	movff	??_isr+17,btemp+1
  1224  000154  C011  F031         	movff	??_isr+16,btemp
  1225  000158  C010  FFF5         	movff	??_isr+15,tablat
  1226  00015C  C00F  FFF8         	movff	??_isr+14,tblptru
  1227  000160  C00E  FFF7         	movff	??_isr+13,tblptrh
  1228  000164  C00D  FFF6         	movff	??_isr+12,tblptrl
  1229  000168  C00C  FFF4         	movff	??_isr+11,prodh
  1230  00016C  C00B  FFF3         	movff	??_isr+10,prodl
  1231  000170  C00A  FFDA         	movff	??_isr+9,fsr2h
  1232  000174  C009  FFD9         	movff	??_isr+8,fsr2l
  1233  000178  C008  FFE2         	movff	??_isr+7,fsr1h
  1234  00017C  C007  FFE1         	movff	??_isr+6,fsr1l
  1235  000180  C006  FFEA         	movff	??_isr+5,fsr0h
  1236  000184  C005  FFE9         	movff	??_isr+4,fsr0l
  1237  000188  C004  FFFB         	movff	??_isr+3,pclatu
  1238  00018C  C003  FFFA         	movff	??_isr+2,pclath
  1239  000190  9231               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1240  000192  0011               	retfie		f
  1241  000194                     __end_of_isr:
  1242                           	opt stack 0
  1243                           pclatu	equ	0xFFB
  1244                           pclath	equ	0xFFA
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           intcon2	equ	0xFF1
  1253                           postinc0	equ	0xFEE
  1254                           fsr0h	equ	0xFEA
  1255                           fsr0l	equ	0xFE9
  1256                           wreg	equ	0xFE8
  1257                           fsr1h	equ	0xFE2
  1258                           fsr1l	equ	0xFE1
  1259                           indf2	equ	0xFDF
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           status	equ	0xFD8
  1263                           pclatu	equ	0xFFB
  1264                           pclath	equ	0xFFA
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           prodh	equ	0xFF4
  1270                           prodl	equ	0xFF3
  1271                           intcon	equ	0xFF2
  1272                           intcon2	equ	0xFF1
  1273                           postinc0	equ	0xFEE
  1274                           fsr0h	equ	0xFEA
  1275                           fsr0l	equ	0xFE9
  1276                           wreg	equ	0xFE8
  1277                           fsr1h	equ	0xFE2
  1278                           fsr1l	equ	0xFE1
  1279                           indf2	equ	0xFDF
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284                           	psect	rparam
  1285  0000                     pclatu	equ	0xFFB
  1286                           pclath	equ	0xFFA
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           prodh	equ	0xFF4
  1292                           prodl	equ	0xFF3
  1293                           intcon	equ	0xFF2
  1294                           intcon2	equ	0xFF1
  1295                           postinc0	equ	0xFEE
  1296                           fsr0h	equ	0xFEA
  1297                           fsr0l	equ	0xFE9
  1298                           wreg	equ	0xFE8
  1299                           fsr1h	equ	0xFE2
  1300                           fsr1l	equ	0xFE1
  1301                           indf2	equ	0xFDF
  1302                           fsr2h	equ	0xFDA
  1303                           fsr2l	equ	0xFD9
  1304                           status	equ	0xFD8
  1305                           
  1306                           	psect	temp
  1307  000031                     btemp:
  1308                           	opt stack 0
  1309  000031                     	ds	1
  1310  0000                     int$flags	set	btemp
  1311  0000                     wtemp6	set	btemp+1
  1312                           pclatu	equ	0xFFB
  1313                           pclath	equ	0xFFA
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           intcon2	equ	0xFF1
  1322                           postinc0	equ	0xFEE
  1323                           fsr0h	equ	0xFEA
  1324                           fsr0l	equ	0xFE9
  1325                           wreg	equ	0xFE8
  1326                           fsr1h	equ	0xFE2
  1327                           fsr1l	equ	0xFE1
  1328                           indf2	equ	0xFDF
  1329                           fsr2h	equ	0xFDA
  1330                           fsr2l	equ	0xFD9
  1331                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      48
    BANK0           160      0      60
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     244
                                             28 COMRAM     3     3      0
                       _Delay1Second
                        _Delay200_ms
                    _InitUSART_19200
                           _iniPorts
                             _printf
                            _wait_OK
 ---------------------------------------------------------------------------------
 (1) _wait_OK                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     137
                                             23 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _iniPorts                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitUSART_19200                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Delay200_ms                                          3     3      0      30
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Delay1Second                                         3     3      0      30
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 22    22      0      69
                                              0 COMRAM    22    22      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay1Second
   _Delay200_ms
   _InitUSART_19200
   _iniPorts
   _printf
     _putch
   _wait_OK

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      3C       5       37.5%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1F      30       1       51.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      15        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Nov 24 09:19:07 2023

                      l70 065E                        l71 0670                        l93 06E6  
                      l69 0646                        l95 06FE                        l98 06AC  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000                       l100 06C4  
                     l109 0762                       l170 0710                       l171 070A  
                     l811 069C                       l821 06D6                       l795 0782  
                     _GIE 007F97              __CFG_CPB$OFF 000000                       u250 065E  
            __CFG_CPD$OFF 000000                       u367 0678                       u377 06B2  
                     u387 06EC                       _isr 0008              __CFG_BORV$18 000000  
                     wreg 000FE8              __CFG_FOSC$HS 000000   __end_of_InitUSART_19200 0780  
                    ?_isr 0001                      STR_1 0601                      _PEIE 007F96  
                    _RCIE 007CED                      _RCIF 007CF5                      _RCIP 007CFD  
                    i2l80 00A2                      i2l82 0140                      i2l83 00EA  
                    i2l84 00D8                      i2l85 010A                      i2l86 00DC  
                    i2l79 0148                      i2l87 00E0                      i2l88 0122  
                    _RBPU 007F8F                      _Data 002F                      _main 060C  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr2h 000FDA  
                    fsr0l 000FE9                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0031                      isr@i 0015  
                    prodh 000FF4                      prodl 000FF3                      start 0194  
           __CFG_IESO$OFF 000000             __CFG_MCLRE$ON 000000              ___param_bank 000000  
             _Delay200_ms 068C                     ??_isr 0001                     ?_main 0001  
                   _BRG16 007DC3                     _LATA4 007C4C                     _LATB3 007C53  
                   _LATD6 007C66                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _TXREG 000FAD             __CFG_PWRT$OFF 000000             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000                     _Start 002C  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _putch 0780                     main@i 001E  
          __pbitbssCOMRAM 0180           __end_of_wait_OK 076C                     pclath 000FFA  
                   tablat 000FF5                     status 000FD8                     wtemp6 0032  
          __CFG_HFOFST$ON 000000     __size_of_Delay1Second 003A           __initialization 072A  
            __end_of_main 068C                    ??_main 001D             __activetblptr 000002  
        ?_InitUSART_19200 0001              _Delay1Second 06C6                    ?_putch 0001  
                  i2l1063 0112                    i2l1073 0138            __CFG_WDTEN$OFF 000000  
                  _TRISA4 007C94                    _TRISD6 007CAE                    _Data_1 002E  
                  _Data_2 002D                    _NbrInt 0026            __CFG_XINST$OFF 000000  
                  _Start1 002B                    _Start2 002A            __CFG_STVREN$ON 000000  
        __end_of_iniPorts 0796                    _buffin 0060                    clear_0 0730  
                  clear_1 073E                    _printf 0700                    _rw_ptr 0028  
              _TrameStart 0024              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_wait_OK 0017                    tblptru 000FF8  
                  putch@c 0017                __accesstop 0060   __end_of__initialization 0744  
         __CFG_PBADEN$OFF 000000             ___rparam_used 000001            __pcstackCOMRAM 0001  
           __end_of_putch 078C                   ??_putch 0017                __pbssBANK0 0060  
            _flag_CONNECT 0181              ?_Delay200_ms 0001                   ?_printf 0018  
                 i2u35_40 0138                   i2u27_40 0068                   i2u28_45 006A  
               ?_iniPorts 0001                   __Hparam 0000                   __Lparam 0000  
            __psmallconst 0600                   __pcinit 072A                   __ramtop 0600  
                 _flag_OK 0180                   __ptext0 060C                   __ptext1 0752  
                 __ptext2 0700                   __ptext3 0780                   __ptext4 078C  
                 __ptext5 076C                   __ptext6 068C                   __ptext7 06C6  
            Delay200_ms@i 0018           __size_of_printf 002A              __size_of_isr 018C  
                 _wait_OK 0752      end_of_initialization 0744                ??_iniPorts 0017  
           __Lmediumconst 0000                 _RCSTAbits 000FAB                   printf@c 001C  
                 printf@f 0018                   postinc0 000FEE                 _TRISBbits 000F93  
               _TXSTAbits 000FAC  __size_of_InitUSART_19200 0014      __size_of_Delay200_ms 003A  
          __end_of_printf 072A       start_initialization 072A               __end_of_isr 0194  
        __CFG_LPT1OSC$OFF 000000                  ??_printf 001A               __pbssCOMRAM 0020  
       __size_of_iniPorts 000A         __CFG_CCP2MX$PORTC 000000                 __pintcode 0008  
       ??_InitUSART_19200 0017               __smallconst 0600                  ?_wait_OK 0001  
           ?_Delay1Second 0001            __size_of_putch 000C                  _PIE1bits 000F9D  
                _PIR1bits 000F9E          __CFG_WDTPS$32768 000000            ??_Delay1Second 0017  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
                _TrameFin 0022          __size_of_wait_OK 001A                  _iniPorts 078C  
           __size_of_main 0080              _TrameERROROK 0020             ??_Delay200_ms 0017  
                int$flags 0031                  intlevel2 0000           _InitUSART_19200 076C  
    __end_of_Delay1Second 0700                  printf@ap 001A       __end_of_Delay200_ms 06C6  
           Delay1Second@i 0018  
